ft_arg_type.c:	if (ft_strequ(block->category, "INSTRUCTION") && op_tab->ocp == 1)
ft_arg_type.c:	while (block->next)
ft_arg_type.c:		if (ft_strequ(block->category, "INSTRUCTION"))
ft_arg_type.c:			last_op = ft_strdup(block->content);
ft_arg_type.c:		if (block->arg_type == DIR_CODE || block->arg_type == IND_CODE)
ft_arg_type.c:			if (block->arg_type == IND_CODE || op_tab->label_size)
ft_arg_type.c:				block->size = 2;
ft_arg_type.c:				block->size = 4;
ft_arg_type.c:		else if (ft_strequ(block->category, "LABEL") ||
ft_arg_type.c:				ft_strequ(block->content, "\n"))
ft_arg_type.c:			block->size = 0;
ft_arg_type.c:			block->size = ft_arg_size2(block, ft_search_op(block->content));
ft_arg_type.c:		block = block->next;
ft_arg_type.c:	block->next = 0;	
ft_arg_type.c:	while (block->next)
ft_arg_type.c:		if (ft_strequ(block->category, "ARG"))
ft_arg_type.c:			if (block->content[0] == 'r')
ft_arg_type.c:				block->arg_type = REG_CODE;
ft_arg_type.c:			else if (block->content[0] == DIRECT_CHAR)
ft_arg_type.c:				block->arg_type = DIR_CODE;
ft_arg_type.c:				block->arg_type = IND_CODE;
ft_arg_type.c:		block = block->next;
ft_arg_type.c:	block->next = 0;	
ft_asm.c:		if (!block->content || !block->category)
ft_asm.c:		if (ft_strequ(block->category, "INSTRUCTION"))
ft_asm.c:		else if (ft_strequ(block->category, "ARG"))
ft_asm.c:		block = block->next;
ft_complete_content.c:	block->content = ft_strnmdup(str, j, *i);
ft_complete_content.c:	block->category = ft_strdup("ARG");
ft_get_in_chain.c:	block->category = ft_strdup("LABEL");
ft_get_in_chain.c:	block->content = ft_strnmdup(str, i, j + 1);
ft_get_in_chain.c:	block->next = 0;
ft_get_in_chain.c:			block->nb_lines++;
ft_get_in_chain.c:				block = block->next;
ft_get_in_chain.c:			block->next = ft_memalloc(sizeof(t_chain));
ft_get_in_chain.c:			block = block->next;
ft_get_in_chain.c:			block->content = ft_strdup("\n");
ft_get_in_chain.c:			block->category = ft_strdup("ENDL");
ft_get_in_chain.c:			block->next = ft_memalloc(sizeof(t_chain));
ft_get_in_chain.c:			block = block->next;
ft_nbr_link.c:	while (block->next)
ft_nbr_link.c:		block->index = i;
ft_nbr_link.c:		block = block->next;
ft_put_line_in_block.c:		if (ft_strequ(op_tab[i].str, block->content))
ft_put_line_in_block.c:			block->nb_op_tab = i;
ft_verify_label.c:			while (block->next)
ft_verify_label.c:				if (ft_strequ(block->category, "LABEL") &&
ft_verify_label.c:						ft_strequ(block->content, res))
ft_verify_label.c:				block = block->next;
ft_write_cor.c:	while (block->next)
ft_write_cor.c:		n = n + block->size;
ft_write_cor.c:		block = block->next;
main.c:	while (block->next)
main.c:		if (block->content)
main.c:			ft_strdel(&block->content);
main.c://		if (block->category)
main.c://			ft_strdel(&block->category);
main.c:		block = block->next;
